(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{676:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entry","aria-hidden":"true"}},[t._v("#")]),t._v(" entry")]),t._v(" "),a("h3",{attrs:{id:"作用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用：","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用：")]),t._v(" "),a("p",[t._v("完成两件事：")]),t._v(" "),a("ul",[a("li",[t._v("确认入口模块，即告诉 webpack 从哪里开始进行打包")]),t._v(" "),a("li",[t._v("定义了导出代码块的名字 bundle name，如果只有一个入口且采用字符串形式，默认 bundle name 是 main；如果有多个入口文件，采用对象形式，生成多个打包文件以对象的 key 作为 bundle name")])]),t._v(" "),a("h3",{attrs:{id:"用法："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法：","aria-hidden":"true"}},[t._v("#")]),t._v(" 用法：")]),t._v(" "),a("p",[a("strong",[t._v("常见用法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack基于node环境，所以采用node的commonJs模块标准，导出一个配置文件")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 单入口，采用字符串类型")]),t._v("\n    entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/index.js'")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多入口，采用对象类型")]),t._v("\n    entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pageA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pageB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'som path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("另外还可以是数组形式和函数形式，因为不常用，具体介绍查看"),a("a",{attrs:{href:"http://webpack.html.cn/configuration/entry-context.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文官网"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"实践场景："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实践场景：","aria-hidden":"true"}},[t._v("#")]),t._v(" 实践场景：")]),t._v(" "),a("p",[t._v("1、"),a("strong",[t._v("配置 context 属性")]),t._v("：\n入口内容的公共路径")]),t._v(" "),a("ul",[a("li",[t._v("context 属性为可选，默认为当前项目根路径。")]),t._v(" "),a("li",[t._v("context 属性要求使用绝对路径形式，所以可以借助 Node 的 path 模块和全局__dirname 属性生成："),a("code",[t._v("path.resolve(__dirname, path)")]),t._v("或 "),a("code",[t._v("path.resolve(path)")]),t._v(" 或 "),a("code",[t._v("path.join(__dirname, path)")]),t._v("，resolve 和 join 的区别见下面。")]),t._v(" "),a("li",[t._v("当配置路径较长时，特别是多入口都重复书写路径相同的某一部分时，可以抽出相同部分配置到 context 属性中。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script/index.js'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\ncontext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nentry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./index.js'")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pageA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script/pageA.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pageB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script/pageB.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pageC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script/pageC.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简化为")]),t._v("\ncontext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nentry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pageA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./pageA.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pageB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./pageB.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pageC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./pageC.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("2、配置 vendor 入口，提取公共模块。\nwebpack 默认配置中，当一个 bundle 大于 250KB 时会认为这个打包结果过大（可在 performance 属性上修改，后面讲），发了警告。并且把所有代码打包到一个文件中，当代码更新时，页面加载都要重新下载大文件。\n可以配合 webpack 内置的"),a("code",[t._v("optimization.splitChunks")]),t._v("配置（后面讲）,增加一个 vendor 入口配置，将一些第三方的公共模块代码单独打包一个 vendor.js 文件，因为第三方依赖模块代码一般不会经变动，使客户端可以有效利用本地缓存。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("entry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/index.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    vendor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue-router'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用数组的形式把第三方依赖放进去，splitChunks会处理如果打包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"延伸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延伸","aria-hidden":"true"}},[t._v("#")]),t._v(" 延伸")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("module")]),t._v(" "),a("code",[t._v("chunk")]),t._v(" "),a("code",[t._v("bundle")]),t._v(" 区别")]),t._v("\nmodule 是一个独立的功能模块，chunk 是一堆有依赖关系的 module 打包的结果，bundle 是一堆 chunk 最后生成的结果")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("path.resolve")]),t._v(" "),a("code",[t._v("path.join")]),t._v("区别")])]),t._v(" "),a("ul",[a("li",[t._v("path.join() 方法使用平台特定的分隔符把全部给定的 path 片段连接到一起，生成一个符合当前平台规范的路径。具体平台 Node 内部会判断，如 window 特定的路径分隔符是"),a("code",[t._v("\\")]),t._v("。")]),t._v(" "),a("li",[t._v("path.resolve() 方法会把一个路径或路径片段的序列解析为符合当前平台规范的一个绝对路径。\n"),a("ul",[a("li",[t._v("给定的路径的序列是从右往左被处理的，后面每个 path 被依次解析，直到构造完成一个绝对路径。")]),t._v(" "),a("li",[t._v("如果处理完全部给定的 path 片段后还未生成一个绝对路径，则当前工作目录"),a("code",[t._v("__dirname")]),t._v("会被用上。")]),t._v(" "),a("li",[t._v("如果没有传入 path 片段，则 path.resolve() 会返回当前工作目录的绝对路径。")])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("一个path在node中被解析的字段(请无视以上字符串中的空格，它们只是为了布局)。在window系统平台上`/`换成`\\`\n┌─────────────────────┬────────────┐\n│          dir        │    base    │\n├──────┬              ├──────┬─────┤\n│ root │              │ name │ ext │\n\"  /    home/user/dir / file  .txt \"\n└──────┴──────────────┴──────┴─────┘\npath.parse('/home/user/dir/file.txt');\n// 返回:\n// { root: '/',\n//   dir: '/home/user/dir',\n//   base: 'file.txt',\n//   ext: '.txt',\n//   name: 'file' }\n")])])]),a("p",[a("a",{attrs:{href:"https://www.nodeapp.cn/path.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多参考 Node 的 path 模块"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);