(window.webpackJsonp=window.webpackJsonp||[]).push([[190],{738:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2-指令-directive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-指令-directive","aria-hidden":"true"}},[t._v("#")]),t._v(" 2 指令 directive")]),t._v(" "),s("p",[t._v("在上一节我们知道，VUE的template模板通过VUE指令API实现与页面的视图层联系。所以本节将聚集在实现视图层交互的VUE指令系统directive的基础使用。")]),t._v(" "),s("p",[t._v("我们先回顾下，原生HTML元素的一个结构包含哪些内容？")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("none")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("disabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("pre",[s("code",[t._v('html元素包括：\n    标签：开始标签 <button>  结束标签 </button>\n    特性及值： id="example"   class="example"   style="display:none"   \n                disabled (值类型为布尔值时，出现为true，元素中没有则为false)\n    属性及值： display：none\n    事件绑定： onclick="handleClick"\n    内容： content\n')])]),t._v(" "),s("p",[t._v("template中HTML元素写法与原生完全一样。不同的是当需要vue去控制元素某些部位的值时需要采用vue指令去绑定该值。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{example:true}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")])]),s("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("[baseStyle]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("disabled")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click.stop")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleClick"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ content }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("所以我们根据html的元素结构来学习对应的vue指令")]),t._v(" "),s("p",[t._v("在上面的这个例子，指令有四种形态，如"),s("code",[t._v("v-if")]),t._v("，"),s("code",[t._v("v-bind:disabled")]),t._v("，"),s("code",[t._v("v-on:click.stop")]),t._v("，"),s("code",[t._v(t._s())]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("不带参数指令，一般控制着整个html元素的显示，如"),s("code",[t._v("v-if")]),t._v(" / "),s("code",[t._v("v-show")]),t._v("根据值真假控制元素的可见和不可见，"),s("code",[t._v("v-for")]),t._v(" 用于循环列表元素的批量生成。")]),t._v(" "),s("li",[t._v("带参数的指令"),s("code",[t._v("v-bind")]),t._v("绑定HMTL元素的特性，控制着该特性的表现，如"),s("code",[t._v("disabled")]),t._v("值为真，则disabled特性生效，按钮禁用。")]),t._v(" "),s("li",[t._v("带参数和事件修饰符的指令"),s("code",[t._v("v-on:click.stop")]),t._v("，事件修饰符只出现在事件绑定指令"),s("code",[t._v("v-on")]),t._v("上。")])]),t._v(" "),s("blockquote",[s("p",[t._v("disabled称为指令v-bind的参数,\nclick称为指令v-on的参数，stop称为指令v-on的事件修饰符。\n"+t._s()+"插值，严格上不算VUE标准指令，我归结在一起也是方便自己记忆而已。")])]),t._v(" "),s("p",[t._v("所以对vue指令的可以总结为以下几类：")]),t._v(" "),s("ol",[s("li",[t._v("绑定元素内容的指令："),s("code",[t._v("{{}}")]),t._v("-输出字符串文本作为内容的插值， "),s("code",[t._v("v-html")]),t._v(" - 输出DOM节点作为内容的指令")]),t._v(" "),s("li",[t._v("绑定元素显示的指令："),s("code",[t._v("v-if/else")]),t._v("， "),s("code",[t._v("v-show")]),t._v("， "),s("code",[t._v("v-for")])]),t._v(" "),s("li",[t._v("绑定元素特性的指令："),s("code",[t._v("v-bind")]),t._v(" 特性名称作为指令的参数")]),t._v(" "),s("li",[t._v("绑定元素事件的指令："),s("code",[t._v("v-on")]),t._v(" 事件名作为指令参数，及其相关修饰符")]),t._v(" "),s("li",[t._v("表单元素实现值双向绑定的指令："),s("code",[t._v("v-model")])])]),t._v(" "),s("p",[t._v("后面，我们学习每一个指令的具体知识点。")])])}),[],!1,null,null,null);a.default=e.exports}}]);