(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{901:function(t,r,a){"use strict";a.r(r);var e=a(0),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul")]),a("p"),t._v(" "),a("p",[t._v("本文主要参考以下文档内容，特别是最一个文档教程借鉴最多，特别感谢"),a("a",{attrs:{href:"https://github.com/xcatliu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("xcatliu"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 官网-英文"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.tslang.cn/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 官网-中文"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript Handbook（中文版）"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://ts.xcatliu.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 入门教程"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("正如"),a("a",{attrs:{href:"https://ts.xcatliu.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typescript 入门教程"),a("OutboundLink")],1),t._v("作者"),a("a",{attrs:{href:"https://github.com/xcatliu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("xcatliu"),a("OutboundLink")],1),t._v("所说的一样，官网教程各个知识点间穿插太多，不便于初学者循序渐进的理解，经常需要多次阅读才能将知识点串联起来。\n看到"),a("a",{attrs:{href:"https://github.com/xcatliu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("xcatliu"),a("OutboundLink")],1),t._v("的这个教程简直让我眼前一亮，这不正是我正想要梳理的入门路径嘛。强烈推荐大家去阅读它的教程，半小时入门"),a("code",[t._v("Typescript")]),t._v("。")]),t._v(" "),a("p",[t._v("但我又为什么还要自己再写一遍类似教程呢？\n一来是"),a("a",{attrs:{href:"https://github.com/xcatliu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("xcatliu"),a("OutboundLink")],1),t._v("把内容分为基础和进阶两部分。不太符合我构建的知识脉路，比如我更愿意把数组和元组放在一起，但它明了的内容讲解和简洁的行文是我需要借鉴的。\n另一个，自己看了，写了总归还是要按自己的脉路作个总结，以便日后回顾方便。")]),t._v(" "),a("p",[t._v("下面还是按照惯例来介绍"),a("code",[t._v("Typescript")])]),t._v(" "),a("ul",[a("li",[t._v("What is it")]),t._v(" "),a("li",[t._v("Why do we need it")]),t._v(" "),a("li",[t._v("How to use it")])]),t._v(" "),a("h1",{attrs:{id:"what-is-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-typescript","aria-hidden":"true"}},[t._v("#")]),t._v(" What is Typescript")]),t._v(" "),a("p",[a("code",[t._v("Typescript")]),t._v("是 Microsoft 开源的一门现代"),a("code",[t._v("Javascript")]),t._v("语言，是"),a("code",[t._v("JavaScript")]),t._v("的超集。因为它在"),a("code",[t._v("Javascript")]),t._v("语言的基础上，提供了语言的类型系统，以及对 ES6 的支持更好。第一版本发布于 2012 年 10 月，发展势头迅猛。")]),t._v(" "),a("p",[a("code",[t._v("Typescript")]),t._v("书写的代码最终还是要经"),a("code",[t._v("Typescript")]),t._v("本身提供的编译工具编译成纯正的"),a("code",[t._v("Jvascript")]),t._v("代码的。这样任何原来可以运行"),a("code",[t._v("Javascript")]),t._v("代码的环境也就可以运行"),a("code",[t._v("Typescript")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Typescript "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TS")]),t._v(" compiler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Javascript "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n")])])]),a("p",[t._v("想想"),a("code",[t._v("TS")]),t._v(" "),a("code",[t._v("JS")]),t._v(" "),a("code",[t._v("ES")]),t._v("三者的关系？")]),t._v(" "),a("blockquote",[a("p",[t._v("Javascript 语言包括三部分内容：ECMAScript 、 DOM 、 BOM。所以 js 运行主要在浏览器端，鉴于浏览器厂商对 ES 新语法实现的速度，所以说 TS 对 ES 新语法的支持更快更好。\nNodejs 是提供了 ES 在服务器端运行的宿主环境，浏览器是 ES 在客户端运行的宿主环境。")])]),t._v(" "),a("h1",{attrs:{id:"why-do-we-need-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-do-we-need-it","aria-hidden":"true"}},[t._v("#")]),t._v(" Why do we need it")]),t._v(" "),a("p",[t._v("前面我们说了，"),a("code",[t._v("Typescript")]),t._v("带来的最重要的功能是为"),a("code",[t._v("Javascript")]),t._v("提供了类型系统，那这个类型系统是什么（what)，解决什么问题或者说带来什么好处吸引我们去用它（Why)?")]),t._v(" "),a("p",[t._v("我们知道"),a("code",[t._v("JS")]),t._v("是一门弱类型的语言，变量声明定义之后，也可以重新赋值其它类型的值。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" something "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NBA'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 赋值字符串类型")]),t._v("\nsomething "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新赋值为数值类型")]),t._v("\n")])])]),a("p",[t._v("在实际项目中这样就会出现很多未知的错误，特别是团队中多人开发过程中，最突出的就是函数使用时传参类型不一致导致运行时报错。\n那么用"),a("code",[t._v("TS")]),t._v("写代码，需要显性声明了每个变量和方法的类型，即使未显性声明，"),a("code",[t._v("TS")]),t._v("编译时也会自动做出"),a("strong",[t._v("类型推断")])]),t._v(" "),a("p",[t._v("所以"),a("code",[t._v("TS")]),t._v("的类型系统能带来可见的好处是增加了代码的可读性和可维护性：")]),t._v(" "),a("ul",[a("li",[t._v("在代码编译阶段就发现大部分错误，这总比在运行时候出错好")]),t._v(" "),a("li",[t._v("现在常规主流的 IDE 都支持 TS，所以书写代码时的语法提示、代码补全、接口提示、跳转到定义、重构等功能非常方便提高效率。")]),t._v(" "),a("li",[t._v("类型系统实际上是最好的文档，大部分的函数看看类型的定义就可以知道如何使用了。")])]),t._v(" "),a("p",[t._v("更多的优点和缺点可以查看这里"),a("a",{attrs:{href:"https://ts.xcatliu.com/introduction/what-is-typescript",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("所以说"),a("code",[t._v("Typescript")]),t._v("非常适合大型团队项目的协作开发。")]),t._v(" "),a("h1",{attrs:{id:"how-to-use-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-it","aria-hidden":"true"}},[t._v("#")]),t._v(" How to use it")]),t._v(" "),a("p",[t._v("下一篇，正式进入如何使用"),a("code",[t._v("Typescript")]),t._v("。")])])}),[],!1,null,null,null);r.default=s.exports}}]);