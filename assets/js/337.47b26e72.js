(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{924:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"http-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-概述","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 概述")]),t._v(" "),a("p",[t._v("HTTP是客户端与服务端进行数据传输的协议，是万维网发明时的四部分内容之一。")]),t._v(" "),a("p",[t._v("简单点说，客户端向服务器端请求资源，你总要告诉服务器你发的这个请求是获取资源，还是修改资源，是请求的哪个资源，资源的类型类型是什么，以及资源找到了，服务器响应给你有什么要求等等信息，而HTTP协议就是用来约定这些交互信息的。一个HTTP消息，就像一个快递的面单，标记了寄件地目的地，运输方式，是否保价等信息。")]),t._v(" "),a("h3",{attrs:{id:"http-能控制什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-能控制什么","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 能控制什么")]),t._v(" "),a("p",[t._v("HTTP 能控制什么?也可以说HTTP约定了什么？")]),t._v(" "),a("p",[t._v("多年以来，HTTP良好的扩展性使得越来越多的Web功能归其控制。缓存和认证很早就可以由HTTP来控制了。另一方面，对同源同域的限制到2010年也可以由HTTP开放限制了。")]),t._v(" "),a("ul",[a("li",[t._v("HTTP缓存（from disk cache 部分）\n通过"),a("code",[t._v("Expires")]),t._v(" "),a("code",[t._v("Cache-Control")]),t._v(" "),a("code",[t._v("Last-Modified")]),t._v(" "),a("code",[t._v("Etag")]),t._v(" "),a("code",[t._v("If-Modified-Since")]),t._v(" "),a("code",[t._v("If-None-Match")]),t._v("等头字段控制页面资源的缓存。（具体见浏览器栏目下的web缓存章节）")]),t._v(" "),a("li",[t._v("会话状态的保持\n虽然HTTP连接是无状态的，但通过"),a("code",[t._v("Cookies")]),t._v(" 和 "),a("code",[t._v("Set-Cookie")]),t._v("字段可以让会话实现有状态链接。")]),t._v(" "),a("li",[t._v("同源限制的开放\n通过"),a("code",[t._v("Access-Control-Allow-Origin/Headers/Methods/Credentials")]),t._v("等头字段来实现跨域请求")]),t._v(" "),a("li",[t._v("认证\n通过使用"),a("code",[t._v("Authenticate")]),t._v("头部，或用HTTP Cookies来实现身份认证，指定的会话。")])]),t._v(" "),a("h3",{attrs:{id:"http的基本性质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http的基本性质","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP的基本性质")]),t._v(" "),a("ul",[a("li",[t._v("HTTP 是可扩展的，通过HTTP headers 让协议扩展变得非常容易")]),t._v(" "),a("li",[t._v("HTTP 是无状态的，在同一个连接中，两个执行成功的请求之间是没有关系的。但可以通过Cookies创建有状态的会话。")]),t._v(" "),a("li",[t._v("HTTP 建议一个会话，需要开启HTTP连接和HTTP消息交互两个过程。")])]),t._v(" "),a("h2",{attrs:{id:"http-演变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-演变","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 演变")]),t._v(" "),a("ul",[a("li",[t._v("1989年 Tim Berners-Lee 博士内部发布万维网原型系统的报告，并于1990年底完成")]),t._v(" "),a("li",[t._v("1991年8月16日 万维网系统作为公共项目公开")]),t._v(" "),a("li",[t._v("最初HTTP协议作为 HTTP/0.9 命名，以区分后面版本")]),t._v(" "),a("li",[t._v("1996年11月 HTTP/1.0 标准以 RFC 1945 文档发布")]),t._v(" "),a("li",[t._v("1997年1月，HTTP/1.1 标准以 RFC 2068 文档发布")]),t._v(" "),a("li",[t._v("1999年6月 HTTP/1.1 修订版 RFC 2616文档发布")]),t._v(" "),a("li",[t._v("2014年6月 HTTP/1.1 修订版 RFC 7230 和 RFC 7235 文档发布，作为HTTP/2的预览版本")]),t._v(" "),a("li",[t._v("2015年5月，HTTP/2 正式标准化，以谷歌的SPDY协议为基础")])]),t._v(" "),a("h3",{attrs:{id:"www-万维网的发明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#www-万维网的发明","aria-hidden":"true"}},[t._v("#")]),t._v(" WWW 万维网的发明")]),t._v(" "),a("p",[t._v("1989年， 当时在 CERN 工作的 Tim Berners-Lee 博士写了一份关于建立一个通过网络传输超文本系统的报告，报告中阐述的这个系统包括四个部分：")]),t._v(" "),a("ul",[a("li",[t._v("一个用来表示超文本文档的文本格式，超文本标记语言（HTML）。")]),t._v(" "),a("li",[t._v("一个用来交换超文本文档的简单协议，超文本传输协议（HTTP）。")]),t._v(" "),a("li",[t._v("一个显示（以及编辑）超文本文档的客户端，即网络浏览器。第一个网络浏览器被称为 WorldWideWeb。")]),t._v(" "),a("li",[t._v("一个服务器用于提供可访问的文档，即 httpd 的前身。")])]),t._v(" "),a("p",[t._v("这四个部分完成于1990年底，1991年8月16日，Tim Berners-Lee 在公开的超文本新闻组上发表的文章被视为是万维网公共项目的开始。")]),t._v(" "),a("blockquote",[a("p",[t._v("这个系统在最初的报告写作中被命名为 Mesh，但在随后的1990年项目实施期间被更名为万维网（World Wide Web），它依赖于TCP和IP协议基础之上建立。")])]),t._v(" "),a("h3",{attrs:{id:"http-0-9-–-单行协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9-–-单行协议","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP/0.9 – 单行协议")]),t._v(" "),a("p",[t._v("最初版本的HTTP协议并没有版本号，后来它的版本号被定位在 0.9 是为了区分后来的版本。早期阶段的HTTP非常简单，也叫做单行（one-line）协议。")]),t._v(" "),a("p",[t._v("协议中请求部分由单行指令构成，以唯一可用方法GET开头，其后跟目标资源的路径。在现在看来的协议、服务器、端口号这些在当时都不是必须的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("GET /mypage.html\n")])])]),a("p",[t._v("协议中响应部分也是非常简单，只包含一个HTML文档本身内容。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("HTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n这是一个非常简单的HTML页面\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("HTML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("HTTP/0.9协议太过简单， 响应内容不包含HTTP头，只有HTML文件可以传送，无法传输其他类型的文件；也没有状态码或错误代码：一旦出现问题，只返回一个特殊的包含问题描述信息的HTML文件，供人们查看。")]),t._v(" "),a("h3",{attrs:{id:"http-1-0-–-构建可扩展性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-–-构建可扩展性","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP/1.0 – 构建可扩展性")]),t._v(" "),a("p",[t._v("因为HTTP/0.9协议太过简单导致响应内容单一，所以下一个版本HTTP/1.0主要改进的问题就是增加扩展性。")]),t._v(" "),a("ul",[a("li",[t._v("协议版本信息随每个请求发送（协议版本信息追加到GET行后面）。")]),t._v(" "),a("li",[t._v("响应信息增加了状态码，以便浏览器能了解请求执行的结果是成功还是失败，以作出相应的行为调整。")]),t._v(" "),a("li",[t._v("引入HTTP头信息的概念，无论请求还是响应，允许携带元数据，即头信息。这是使HTTP变得更具扩展性的关键。")]),t._v(" "),a("li",[t._v("在引入HTTP头信息后，增加的"),a("code",[t._v("Content-Type")]),t._v("头字段，允许传输除默认的HTML文档外的其它类型资源。")])]),t._v(" "),a("p",[t._v("典型的HTTP消息看起来就像这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// request")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mypage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NCSA_Mosaic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Windows "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// response")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" Nov "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1994")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\nServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CERN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),t._v(" libwww"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.17")]),t._v("\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n一个包含图片的页面\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/myimage.gif"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("因为文档中还包括图片资源，所以会发起第二个请求")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// request")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("myimage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gif "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NCSA_Mosaic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Windows "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// response")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Tue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" Nov "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1994")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\nServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CERN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),t._v(" libwww"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.17")]),t._v("\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gif")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("这里是图片内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("实际上从1991年8月16日万维网系统作为公共项目公布之后，在1991-1995年间，这些新扩展的功能作为尝试性的特性就被陆续使用了，但因为没有标准的实现，导致通信交互间大量不统一的问题。")]),t._v(" "),a("p",[t._v("直到1996年11月，为了解决这些问题，一份新文档（RFC 1945）被发表出来，用以描述如何操作实践这些新扩展功能。文档 RFC 1945 定义了 HTTP/1.0，但它是狭义的，并不是官方制定标准，可以说是一份为了统一使用而临时的制定的规范。")]),t._v(" "),a("h3",{attrs:{id:"http-1-1-–-标准化的协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1-–-标准化的协议","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP/1.1 – 标准化的协议")]),t._v(" "),a("p",[t._v("实际上在HTTP/1.0文档发布之前，已经在着手制作HTTP的一个标准化版本。在1997年1月，HTTP1.1 标准以 RFC 2068 文件正式发布，就在1.0版本（1996年11月）发布的几个月后。（不明白既然已经在做制作标准版本了，为什么又要仓促发布1.0版本？）")]),t._v(" "),a("p",[t._v("HTTP/1.1 在1.0的基本上，又引入了多项改进：")]),t._v(" "),a("ul",[a("li",[t._v("引入额外的缓存控制机制，即cache-control头，取代1.0中的Expires。")]),t._v(" "),a("li",[t._v("对响应的文档内容提供了更细致的约定，除了支持更多文档类型外，还包括文档语言，文档编码等，使得客户端和服务器之间约定以最合适的内容进行交换。")]),t._v(" "),a("li",[t._v("默认长连接，替换1.0版本默认的短连接，节省了多次建立TCP连接的时间。")]),t._v(" "),a("li",[t._v("增加流水线连接，允许在第一个应答被完全发送之前就发送第二个请求，以降低通信延迟。")])]),t._v(" "),a("p",[t._v("HTTP/1.1版本在中间又经历过两次修订：")]),t._v(" "),a("ul",[a("li",[t._v("1999年6月 RFC 2616文档发布")]),t._v(" "),a("li",[t._v("2014年6月 RFC 7230 和 RFC 7235 文档发布，作为HTTP/2的预览版本。（可不可以理解http1.0的版本实际是http1.1的预览版本，作为解答上面疑问的答案）")])]),t._v(" "),a("h3",{attrs:{id:"http-2-为了更优异的表现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-为了更优异的表现","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP/2 - 为了更优异的表现")]),t._v(" "),a("p",[t._v("随着网页越来越复杂，传输的数据越来越多，比如视频播放量，HTTP/1.1要求请求以正确的顺序发送，而不能并行发送请求的问题越发突出。")]),t._v(" "),a("p",[t._v("在2010年到2015年，谷歌通过实践了一个实验性的SPDY协议，证明了一个在客户端和服务器端交换数据的另一种方式，明确了响应数量的增加和解决复杂的数据传输。SPDY成为了HTTP/2协议的基础。")]),t._v(" "),a("p",[t._v("HTTP/2在HTTP/1.1有几处基本的不同:")]),t._v(" "),a("ul",[a("li",[t._v("这是一个复用协议。并行的请求能在同一个链接中处理，移除了HTTP/1.x中顺序和阻塞的约束。")]),t._v(" "),a("li",[t._v("压缩了headers，移除了重复和传输重复数据的成本。因为headers在一系列请求中常常是相似的，有很多相同的头被重复发送。")]),t._v(" "),a("li",[t._v("允许服务器在客户端缓存中发送数据，通过一个叫服务器推送的机制来提前请求。")])]),t._v(" "),a("p",[t._v("2015年5月，HTTP/2正式标准化。并迅速的普及，因为从HTTP/1升级到HTTP2不需要站点和应用做出任何改变。")]),t._v(" "),a("h3",{attrs:{id:"http的进化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http的进化","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP的进化")]),t._v(" "),a("ul",[a("li",[t._v("HTTPS 用于安全传输的协议")]),t._v(" "),a("li",[t._v("Server-sent events，服务器可以偶尔推送消息到浏览器。")]),t._v(" "),a("li",[t._v("WebSocket，一个新协议，可以通过升级现有 HTTP 协议来建立。")])]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN HTTP的发展"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);