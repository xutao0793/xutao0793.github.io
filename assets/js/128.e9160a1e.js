(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{665:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky","aria-hidden":"true"}},[t._v("#")]),t._v(" Husky")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#git-hooks"}},[t._v("git hooks")])]),a("li",[a("a",{attrs:{href:"#husky"}},[t._v("Husky")])]),a("li",[a("a",{attrs:{href:"#husky-与-lint-staged-配合使用"}},[t._v("Husky 与 lint-staged 配合使用")])])])]),a("p"),t._v(" "),a("blockquote",[a("p",[t._v("Git hooks made easy"),a("br"),t._v("Husky can prevent bad git commit, git push and more 🐶 woof! ---"),a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("Husky github"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Husky 插件的目的是让 git hooks 操作更简单，能够帮你阻挡住不好的代码提交和推送。")]),t._v(" "),a("blockquote",[a("p",[t._v("试想如果将代码已经 push 到远程后，再进行扫描发现多了一个分号然后被打回修改后才能发布，这样是不是很崩溃，最好的方式自然是确保本地的代码已经通过检查才能 push 到远程，这样才能从一定程度上确保应用的线上质量，同时也能够避免 lint 的反馈流程过长的问题。"),a("br"),t._v("那么什么时候开始进行扫描检查呢？这个时机自然而然是本地进行 git commit 的时候，如果能在本地执行 git commit 操作时能够触发对代码检查就是最好的一种方式。这里就需要使用的 git hook。")])]),t._v(" "),a("h2",{attrs:{id:"git-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks","aria-hidden":"true"}},[t._v("#")]),t._v(" git hooks")]),t._v(" "),a("p",[t._v("git 的 hook 可以理解成当执行如 git add、git commit 等 git 操作时的回调，通过在 git hook 不同钩子里编写一些命令脚本，就可以在 git 操作时触发代码相应脚本执行。")]),t._v(" "),a("p",[t._v("可以查看 .git 文件下的 hooks 目录，这里存放的是 git 相关操作的一些脚本例子。")]),t._v(" "),a("blockquote",[a("p",[t._v("一般.git 为隐藏文件，可以把项目拖入 IDE 中查看, .git 文件里的内容一般不允许手动更改的。也可以在文件夹中勾选显示隐藏文件查看到。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("cd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以看到 pre-commit / pre-push 等脚本文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-rwxr-xr-x 1 40389 197609  478 10月 13  2019 applypatch-msg.sample*\n-rwxr-xr-x 1 40389 197609  896 10月 13  2019 commit-msg.sample*\n-rwxr-xr-x 1 40389 197609 3327 10月 13  2019 fsmonitor-watchman.sample*\n-rwxr-xr-x 1 40389 197609  189 10月 13  2019 post-update.sample*\n-rwxr-xr-x 1 40389 197609  424 10月 13  2019 pre-applypatch.sample*\n-rwxr-xr-x 1 40389 197609 1638 10月 13  2019 pre-commit.sample*\n-rwxr-xr-x 1 40389 197609 1492 10月 13  2019 prepare-commit-msg.sample*\n-rwxr-xr-x 1 40389 197609 1348 10月 13  2019 pre-push.sample*\n-rwxr-xr-x 1 40389 197609 4898 10月 13  2019 pre-rebase.sample*\n-rwxr-xr-x 1 40389 197609  544 10月 13  2019 pre-receive.sample*\n-rwxr-xr-x 1 40389 197609 3610 10月 13  2019 update.sample*\n")])])]),a("p",[t._v("上图为各个钩子的案例脚本，可以把 sample 去掉，直接编写 shell 脚本来执行。但实际项目中可以使用插件来使钩子生效。常用的插件包括 "),a("code",[t._v("Husky")]),t._v(" 和 "),a("code",[t._v("pre-commit")]),t._v("，这里介绍 "),a("code",[t._v("Husky")]),t._v(" 的使用。")]),t._v(" "),a("h2",{attrs:{id:"husky-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Husky")]),t._v(" "),a("ol",[a("li",[t._v("安装")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" husky --save-dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yarn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" husky --dev\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在 package.json 中配置")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hooks 的 key 对应相应的 git 钩子，值为 script 对应的命令，或其它字段项配置")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-push"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("之后，对项目执行 "),a("code",[t._v("git commit -m 'something'")]),t._v("就会触发对应的命名执行。")]),t._v(" "),a("h2",{attrs:{id:"husky-与-lint-staged-配合使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky-与-lint-staged-配合使用","aria-hidden":"true"}},[t._v("#")]),t._v(" Husky 与 lint-staged 配合使用")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" lint-staged husky --save-dev\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 在代码commit前执行将加入到stage暂存区的文件进行检查，按照下面"lint-staged"中的规则进行检查')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对staged的文件进行lint，避免对整个项目进行lint代码庞大且缓慢")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linters"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/**/*.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配.js文件一下命令")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行eslint进行扫描进行fix")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行prettier脚本,对代码镜像格式化")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上述两项任务完成后对代码重新add。")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/**/*.vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/**/*.scss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --syntax=scss --fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dist/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/node_modules/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/static/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/public/"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);