(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{284:function(t,s,n){t.exports=n.p+"assets/img/commitmessage1.23430b86.png"},285:function(t,s,n){t.exports=n.p+"assets/img/commitmessage2.668bd1a2.png"},286:function(t,s,n){t.exports=n.p+"assets/img/commitmessage3.0df0aa47.png"},287:function(t,s,n){t.exports=n.p+"assets/img/commitmessage4.5cdc2d5e.png"},288:function(t,s,n){t.exports=n.p+"assets/img/git-cz.fa87c4ad.jpg"},661:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-commit-提交规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-提交规范","aria-hidden":"true"}},[t._v("#")]),t._v(" Git Commit 提交规范")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#规范化提交的意义"}},[t._v("规范化提交的意义")])]),a("li",[a("a",{attrs:{href:"#用什么规范"}},[t._v("用什么规范")])]),a("li",[a("a",{attrs:{href:"#规范的格式"}},[t._v("规范的格式")]),a("ul",[a("li",[a("a",{attrs:{href:"#type-提交消息的类型"}},[t._v("type: 提交消息的类型")])]),a("li",[a("a",{attrs:{href:"#scope：用于描述改动的范围"}},[t._v("scope：用于描述改动的范围")])]),a("li",[a("a",{attrs:{href:"#subject-简短的描述"}},[t._v("subject: 简短的描述")])]),a("li",[a("a",{attrs:{href:"#body-正文"}},[t._v("body: 正文")])]),a("li",[a("a",{attrs:{href:"#footer：脚注内容"}},[t._v("footer：脚注内容")])]),a("li",[a("a",{attrs:{href:"#revert"}},[t._v("revert")])])])]),a("li",[a("a",{attrs:{href:"#约束规范的工具-commitlint"}},[t._v("约束规范的工具 Commitlint")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-install-安装"}},[t._v("1. install 安装")])]),a("li",[a("a",{attrs:{href:"#_2-cli-命令行"}},[t._v("2. Cli 命令行")])]),a("li",[a("a",{attrs:{href:"#_3-配置文件-commitlint-config-js"}},[t._v("3. 配置文件 commitlint.config.js")])]),a("li",[a("a",{attrs:{href:"#_4-rule-规则格式"}},[t._v("4. Rule 规则格式")])])])]),a("li",[a("a",{attrs:{href:"#与-husky-集成自动校验"}},[t._v("与 Husky 集成自动校验")])]),a("li",[a("a",{attrs:{href:"#commitizen-替代你的-git-commit"}},[t._v("Commitizen: 替代你的 git commit")]),a("ul",[a("li",[a("a",{attrs:{href:"#全局安装"}},[t._v("全局安装")])]),a("li",[a("a",{attrs:{href:"#项目内局部安装"}},[t._v("项目内局部安装")])])])]),a("li",[a("a",{attrs:{href:"#自动生成-change-log"}},[t._v("自动生成 Change Log")])]),a("li",[a("a",{attrs:{href:"#总结"}},[t._v("总结")])]),a("li",[a("a",{attrs:{href:"#与-vs-code-集成"}},[t._v("与 VS Code 集成")])]),a("li",[a("a",{attrs:{href:"#实践案例"}},[t._v("实践案例")])]),a("li",[a("a",{attrs:{href:"#参考链接"}},[t._v("参考链接")])])])]),a("p"),t._v(" "),a("p",[t._v("git 是现在市面上最流行的版本控制工具，书写良好的 commit message 能大大提高代码维护的效率。但是在日常开发中由于缺少对于 commit message 的约束，导致填写内容随意、质量参差不齐，可读性低亦难以维护。")]),t._v(" "),a("ul",[a("li",[t._v("常见的不规范的效果：")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(284),alt:"commitmessage1.png"}})]),t._v(" "),a("ul",[a("li",[t._v("规范的效果")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(285),alt:"commitmessage2.png"}})]),t._v(" "),a("h2",{attrs:{id:"规范化提交的意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化提交的意义","aria-hidden":"true"}},[t._v("#")]),t._v(" 规范化提交的意义")]),t._v(" "),a("ol",[a("li",[t._v("提供更多的历史信息，方便快速浏览。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("git log "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s\n")])])]),a("p",[t._v("使用上面命令，打印提交记录，每个 commit 占据一行。你只看行首，就知道每次提交的目的。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(286),alt:"commitmessage3.png"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("通过工具 conventional-changelog 可以直接从 commit message 记录中生成 Change log。")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(287),alt:"commitmessage4.png"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("可读性好，清晰，不必深入看代码即可了解当前 commit 的作用。")]),t._v(" "),a("li",[t._v("为 Code Reviewing 做准备")]),t._v(" "),a("li",[t._v("提高项目的整体质量，提高个人工程素质")])]),t._v(" "),a("h2",{attrs:{id:"用什么规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用什么规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 用什么规范")]),t._v(" "),a("p",[t._v("最早因为 Angular 团队的 Commit Message 提交记录格式实践的最好，慢慢在社区中被推广。")]),t._v(" "),a("p",[t._v("受到了 Angular 提交准则的启发，并在很大程度上以其为依据，在社区中定义了"),a("strong",[t._v("约定式提交规范（Conventional Commits）")]),t._v("，它是一种具有更可读含义的轻量级约定。 它在基于 Angular 团队内部的准则基础上预定义了一组用于创建清晰的提交历史的简单规则；")]),t._v(" "),a("blockquote",[a("p",[t._v("官网 "),a("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[t._v("约定式提交规范（Conventional Commits）"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"规范的格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范的格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 规范的格式")]),t._v(" "),a("p",[t._v("规范约定提交消息的格式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n")])])]),a("p",[t._v("同 HTTP 消息的格式差不多，规范格式分为 header body footer 三部分，并以空行分隔。")]),t._v(" "),a("h3",{attrs:{id:"type-提交消息的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-提交消息的类型","aria-hidden":"true"}},[t._v("#")]),t._v(" type: 提交消息的类型")]),t._v(" "),a("p",[t._v("type 用于指定 commit 的类型。依据 Angular 规范，提供了 type 类型包括：")]),t._v(" "),a("ul",[a("li",[t._v("fix: 修复 bug")]),t._v(" "),a("li",[t._v("feat: 增加新功能")]),t._v(" "),a("li",[t._v("refactor: 即不是 BUG 修复，也不是新功能的代码改动")]),t._v(" "),a("li",[t._v("style: 不影响代码含义的改动，例如去掉空格、改变缩进、增删分号")]),t._v(" "),a("li",[t._v("perf: 提高性能的改动")]),t._v(" "),a("li",[t._v("test: 添加测试或者修改现有测试")]),t._v(" "),a("li",[t._v("build: 构造工具的或者外部依赖的改动，例如 webpack，npm, gulp, broccoli 等")]),t._v(" "),a("li",[t._v("chore: 不修改 src 或者 test 的其余修改，例如构建过程或辅助工具的变动")]),t._v(" "),a("li",[t._v("ci: 与 CI（持续集成服务）有关的改动，例如 Travis, Circle, BrowserStack, SauceLabs")]),t._v(" "),a("li",[t._v("docs: 只改动了文档相关的内容")]),t._v(" "),a("li",[t._v("revert: 执行 git revert 打印的 message")])]),t._v(" "),a("p",[t._v("当然也可以使用后面介绍的"),a("code",[t._v("commitlint")]),t._v("工具可以自定义 "),a("code",[t._v("type-enum")]),t._v(" 的值。但 fix feat 一般都是必要的，并且如果 type 为 feat 和 fix，则该 commit 将肯定出现在 Change log 之中。")]),t._v(" "),a("h3",{attrs:{id:"scope：用于描述改动的范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scope：用于描述改动的范围","aria-hidden":"true"}},[t._v("#")]),t._v(" scope：用于描述改动的范围")]),t._v(" "),a("p",[t._v("scope 用于描述改动的范围，格式为项目名/模块名，例如： "),a("code",[t._v("node-pc/common")]),t._v(" "),a("code",[t._v("rrd-h5/activity")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("如果一次 commit 修改多个模块，建议拆分成多次 commit，以便更好追踪和维护。")]),t._v(" "),a("li",[t._v("如果你的修改影响了不止一个 scope，你可以使用*代替。")])]),t._v(" "),a("h3",{attrs:{id:"subject-简短的描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subject-简短的描述","aria-hidden":"true"}},[t._v("#")]),t._v(" subject: 简短的描述")]),t._v(" "),a("p",[t._v("描述字段是必须的，紧接在 类型/作用域 前缀的空格之后。一般都有字符长度限制，通常是 50 字符。")]),t._v(" "),a("p",[t._v("并注意：")]),t._v(" "),a("ul",[a("li",[t._v("以动词开头，使用第一人称现在时，比如 change，而不是 changed 或 changes")]),t._v(" "),a("li",[t._v("第一个字母小写")]),t._v(" "),a("li",[t._v("结尾不加句号（.）")])]),t._v(" "),a("h3",{attrs:{id:"body-正文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body-正文","aria-hidden":"true"}},[t._v("#")]),t._v(" body: 正文")]),t._v(" "),a("p",[t._v("body 正文可选，如果有，必须与 subject 之间空一行，作为此次提交更为详细的描述。")]),t._v(" "),a("p",[t._v("描述通常使用第一人称现在时，比如使用 change 而不是 changed 或 changes。并且应该说明代码变动的动机，以及与以前行为的对比。")]),t._v(" "),a("h3",{attrs:{id:"footer：脚注内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#footer：脚注内容","aria-hidden":"true"}},[t._v("#")]),t._v(" footer：脚注内容")]),t._v(" "),a("p",[t._v("如果需要 footer , 同样需要与 body 正文之间空一行。脚注通常用于描述以下两类内容：")]),t._v(" "),a("ul",[a("li",[t._v("Breaking Changes: 不兼容性的改变描述，且必须以大写的 "),a("code",[t._v("BREAKING CHANGE:")]),t._v("开头。如 "),a("code",[t._v("BREAKING CHANGE: isolate scope bindings definition has changed.")])]),t._v(" "),a("li",[t._v("close issue: 关闭的 issue id。如 "),a("code",[t._v("Closes #234")])])]),t._v(" "),a("h3",{attrs:{id:"revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revert","aria-hidden":"true"}},[t._v("#")]),t._v(" revert")]),t._v(" "),a("p",[t._v("还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以 revert:开头，后面跟着被撤销 Commit 的 Header。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("revert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("feat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pencil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" add "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'graphiteWidth'")]),t._v(" option\n")])])]),a("h2",{attrs:{id:"约束规范的工具-commitlint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约束规范的工具-commitlint","aria-hidden":"true"}},[t._v("#")]),t._v(" 约束规范的工具 Commitlint")]),t._v(" "),a("blockquote",[a("p",[t._v("与其费尽心思地告诉别人要遵守某种规则，以规避某种痛苦，倒不如从工具层面就消灭这种痛苦")])]),t._v(" "),a("p",[t._v("同 ESLint 对 JS 代码的校验， Stylelint 对 CSS 代码的校验功能一样， "),a("code",[t._v("Commitlint")]),t._v(" 工具就是用来校验你的 commit message 是不是符合所提交的"),a("strong",[t._v("约定式提交规范（Conventional Commits）")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://commitlint.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网 Commitlint"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-install-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-install-安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. install 安装")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/cli\n")])])]),a("h3",{attrs:{id:"_2-cli-命令行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cli-命令行","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Cli 命令行")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装完成后，可以使用命令行查看可用的命令行参数")]),t._v("\nnpx commitlint --help\n")])])]),a("blockquote",[a("p",[a("a",{attrs:{href:"https://commitlint.js.org/#/reference-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint CLI"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"_3-配置文件-commitlint-config-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置文件-commitlint-config-js","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 配置文件 "),a("code",[t._v("commitlint.config.js")])]),t._v(" "),a("p",[t._v("常用的提供一个配置文件，设置 commitlint 如何校验。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需求先安装相关依赖")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/config-conventional @commitlint/format conventional-changelog-atom\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commitlint.config.js")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同 ESLint 一样，所有 rules 都是默认关闭的，如果不想一条条在 rulues 里手动配置，可以直接安装选择一个外部扩展来继承规则，官方指定的规则扩展是 @commitlint/config-conventional，也可以使用 @commitlint/config-angular")]),t._v("\n  parserPreset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog-atom"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定规则解析器，可以选用外部安装包")]),t._v("\n  formatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/format"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定 commitlint 校验结果输出的格式")]),t._v("\n  defaultIgnores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用默认的忽略规则")]),t._v("\n  ignores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果commitlint应该忽略给定的消息，则返回true的函数")]),t._v("\n  rules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体要覆盖的自定义规则")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-enum"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-rule-规则格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-rule-规则格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. Rule 规则格式")]),t._v(" "),a("p",[t._v("一条规则包含以下内容：")]),t._v(" "),a("ul",[a("li",[t._v("Level 错误级别：0 1 2\n"),a("ul",[a("li",[t._v("0 : 该规则不生效")]),t._v(" "),a("li",[t._v("1 ：warnnig 生成警告，但不退出")]),t._v(" "),a("li",[t._v("2 ：error 错误，退出终止")])])]),t._v(" "),a("li",[t._v("Applicable 是否适用\n"),a("ul",[a("li",[t._v("always : 始终适用")]),t._v(" "),a("li",[t._v("never ： 不能用")])])]),t._v(" "),a("li",[t._v("Value 规则具体值")])]),t._v(" "),a("p",[t._v("官方推荐的扩展 "),a("code",[t._v("@commitlint/config-conventional")]),t._v("的配置值 "),a("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/@commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commitlint.config.js")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rules"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-enum"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ci"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chore"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"perf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refactor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"revert"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-case"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowerCase"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 小写 value: lower-case  upper-case camel-case pascal-case kebab-case snake-case start-case sentence-case")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不能可以为空")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope-enum"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope-case"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowerCase"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scope-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subject-case"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subject-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subject-full-stop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结尾是否需要以 . 结尾")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subject-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subject-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header-case"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header-full-stop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-case"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-leading-blank"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// body 是否以空行开始")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// body 字符串长度")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-max-line-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer-leading-blank"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer-max-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer-max-line-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer-min-length"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"references-empty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"never"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"signed-off-by"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'Signed-off-by:'\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出的消息签名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"与-husky-集成自动校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-husky-集成自动校验","aria-hidden":"true"}},[t._v("#")]),t._v(" 与 Husky 集成自动校验")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev husky\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这样，每次 git commit 时就会使用 "),a("code",[t._v("commitlint.config.js")]),t._v(" 规则校验。")]),t._v(" "),a("h2",{attrs:{id:"commitizen-替代你的-git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitizen-替代你的-git-commit","aria-hidden":"true"}},[t._v("#")]),t._v(" Commitizen: 替代你的 git commit")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/34223150",target:"_blank",rel:"noopener noreferrer"}},[t._v("优雅的提交你的 Git Commit Message"),a("OutboundLink")],1),t._v(" ---关注 Commitizen 部分")])]),t._v(" "),a("p",[t._v("即使上面的插件和步骤都做完了，但实际在编写 git commit 时还是需要自己手动按约定式规则书写：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix(*): fixed some bug'")]),t._v("\n")])])]),a("p",[t._v("这样也是很累。可以使用 "),a("code",[t._v("Commitizen")]),t._v(" 工具，它按照你提供的适配器模式，将上面 git commit 信息提交转为步骤式的书写。")]),t._v(" "),a("ul",[a("li",[t._v("commitizen/cz-cli: 我们需要借助它提供的 git cz 命令替代我们的 git commit 命令, 帮助我们生成符合规范的 commit message.")])]),t._v(" "),a("p",[t._v("另外，需要为 commitizen 指定一个 Adapter(适配器)，使得 commitizen 能按照适配器指定的规范生成 commit message.")]),t._v(" "),a("blockquote",[a("p",[t._v("这里提供了多个适配器选择"),a("a",{attrs:{href:"https://github.com/commitizen/cz-cli#adapters",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/commitizen/cz-cli#adapters"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("cz-conventional-changelog: 一个符合 Angular 团队规范的 preset，type 固定.")]),t._v(" "),a("li",[t._v("cz-customizable：一个可以自定义规则的适配器，通过 .cz-config.js 自定义配置。")]),t._v(" "),a("li",[t._v("cz-emoji: 一个可以使用 emojis 表情进行格式化 commit message 的适配器，并支持自定义选项和描述。")])]),t._v(" "),a("p",[t._v("下面以 "),a("code",[t._v("commitizen")]),t._v(" 搭配 "),a("code",[t._v("cz-conventional-changelog")]),t._v(" 作示例。")]),t._v(" "),a("h3",{attrs:{id:"全局安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局安装")]),t._v(" "),a("p",[t._v("全局模式下, 需要 ~/.czrc 配置文件, 为 commitizen 指定 Adapter.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g commitizen cz-conventional-changelog\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{ "path": "cz-conventional-changelog" }\'')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ~/.czrc\n")])])]),a("h3",{attrs:{id:"项目内局部安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目内局部安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目内局部安装")]),t._v(" "),a("p",[t._v("推荐进行项目本地安装")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D commitizen cz-conventional-changelog\n")])])]),a("p",[t._v("package.json 中配置:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-cz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules/cz-conventional-changelog"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果全局安装过 commitizen, 那么在对应的项目中执行 "),a("code",[t._v("git cz or npm run commit")]),t._v(" 都可以。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(288),alt:"git-cz.jpg"}})]),t._v(" "),a("h2",{attrs:{id:"自动生成-change-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动生成-change-log","aria-hidden":"true"}},[t._v("#")]),t._v(" 自动生成 Change Log")]),t._v(" "),a("p",[t._v("如果你的所有 Commit 都符合**约定式提交规范（Conventional Commits）**的格式，那么发布新版本时， 要生成 Change log 就可以用脚本自动生成。")]),t._v(" "),a("p",[t._v("生成的文档包括以下三个部分：")]),t._v(" "),a("ul",[a("li",[t._v("New features")]),t._v(" "),a("li",[t._v("Bug fixes")]),t._v(" "),a("li",[t._v("Breaking changes")])]),t._v(" "),a("p",[t._v("每个部分都会罗列相关的 commit ，并且有指向这些 commit 的链接。当然，生成的文档允许手动修改，所以发布前，你还可以添加其他内容。")]),t._v(" "),a("p",[a("code",[t._v("conventional-changelog-cli")]),t._v(" 插件就是生成 Change log 的工具，运行下面的命令即可。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g conventional-changelog-cli\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入项目")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-project\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行命令")]),t._v("\nconventional-changelog -p angular -i CHANGELOG.md -s\n")])])]),a("p",[t._v("如果这是你第一次用这个工具生成 CHANGELOG ，并且覆盖之前的，可以使用：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("conventional-changelog -p angular -i CHANGELOG.md -s -r "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("也可以把这个命令写成 package.json 的 script 命令中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changelog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -s"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("conventional-changelog-cli")]),t._v(" 插件的配置项，使用 "),a("code",[t._v("npx conventional-changelog-cli --help")]),t._v(" 查看：")]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[t._v("// options\n-i, --infile              Read the CHANGELOG from this file 指定 CHANGELOG \n                          输入文件，用于合并上次的 CHANGELOG 记录\n-o, --outfile             Write the CHANGELOG to this file, If unspecified, it prints to stdout\n                          指定 CHANGELOG 输出文件，如果未指定输出到命令窗口\n-s, --same-file           Outputting to the infile so you don not't need to specify the same file as outfile \n                          输出到与 infile 相同的文件中，所以如果输出文件与输入文件相同时，不需要指定 outfile\n-p, --preset              Name of the preset you want to use. Must be one of the following:\n                          angular, atom, codemirror, ember, eslint, express, jquery, jscs or jshint\n                          CHANGELOG 输出格式的预设，只能是指定的几种。\n-k, --pkg                 A filepath of where your package.json is located,Default is the closest package.json from cwd\n                          指定package.json 文件所在路径，默认查找当前目录最近的 package.json\n-a, --append              Should the newer release be appended to the older release,Default: false\n                          新版本是否应该附加上旧版本上，默认值 false\n-r, --release-count       How many releases to be generated from the latest, Default: 1\n                          If 0, the whole changelog will be regenerated and the outfile will be overwritten\n                          从最新版本生成多少个版本，默认值:1。如果为0，则将重新生成整个变更日志，并覆盖 outfile\n--skip-unstable           If given, unstable tags will be skipped, e.g., x.x.x-alpha.1, x.x.x-rc.2\n                          是否需要跳过不稳定的标签，例如，x.x.x-alpha。1, x.x.x-rc.2\n-u, --output-unreleased   Output unreleased changelog\n                          输出未发布的变更日志\n-v, --verbose             Verbose output. Use this for debugging, Default: false\n                          详细的输出。用于调试，默认值:false\n-n, --config              A filepath of your config script 指定配置脚本的文件路径\n                          Example of a config script: https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-cli/test/fixtures/config.js\n-c, --context             A filepath of a json that is used to define template variables\n                          指定用于定义模板变量的json文件路径\n-l, --lerna-package       Generate a changelog for a specific lerna package (:pkg-name@1.0.0)\n                          为特定的lerna包生成一个变更日志(:pkg-name@1.0.0)\n-t, --tag-prefix          Tag prefix to consider when reading the tags\n                          读取 tag 标签时考虑定义的标签前缀 tag-prefix\n--commit-path             Generate a changelog scoped to a specific directory\n                          生成一个作用于特定目录的变更日志\n")])])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一部分： commit message 格式校验")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 安装 commitlint 及扩展")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/cli @commitlint/config-conventional\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 创建配置文件 commitlint.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"module.exports = {extends: ['@commitlint/config-conventional']}\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commitlint.config.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 集成 husky")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev husky\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 更改 package.json 文件配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二部分：完善 git commit 提交方式，避免手写约定格式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5. 用 Commitizen: 替代你的 git commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D commitizen cz-conventional-changelog\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6. 更改 package.json 文件配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".,\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-cz"')]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules/cz-conventional-changelog"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三部分：自动生成 chnagelog")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7. 生成 CHANGELOG")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D conventional-changelog-cli\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 8. 在package.json 的 script 中增加命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changelog"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"与-vs-code-集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-vs-code-集成","aria-hidden":"true"}},[t._v("#")]),t._v(" 与 VS Code 集成")]),t._v(" "),a("ol",[a("li",[t._v("安装"),a("code",[t._v("Git-commit-plugin For Vscode")]),t._v("插件包。")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("ctrl + shift + p")]),t._v(" 调出命令窗口，输入 "),a("code",[t._v("show git commit template")])]),t._v(" "),a("li",[t._v("根据选择项提交信息")])]),t._v(" "),a("p",[t._v("这个插件有三个配置项：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vscode 配置文件 setting.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.MaxSubjectWords"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Subject 简短描述行的字符长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.ShowEmoji"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用 emoji 表情字符，因为如果开启也，那 commitlint 校验 type 要更改匹配的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.CustomCommitType"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 增加自定义的提交类型，可以直接 ['ui', 'merge']，或者像下面详细配置 label detail")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ui"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"detail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修复了显示效果，如 css 修改等"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"detail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"代码分支合"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"实践案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实践案例","aria-hidden":"true"}},[t._v("#")]),t._v(" 实践案例")]),t._v(" "),a("p",[t._v("该实践主要想实现以下目的：")]),t._v(" "),a("ul",[a("li",[t._v("增加 "),a("code",[t._v("merge / ui")]),t._v("两种提交类型")]),t._v(" "),a("li",[t._v("提交交互提示信息转译成中文")]),t._v(" "),a("li",[t._v("统一命令行和IDE插件工具对 commit 的使用")])]),t._v(" "),a("p",[t._v("所以 "),a("code",[t._v("commitizen")]),t._v(" 的适配器选择了可自定义配置的 "),a("code",[t._v("cz-customizable")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一部分： commit message 格式校验")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 安装 commitlint 及扩展")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D @commitlint/cli @commitlint/config-conventional husky\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 创建配置文件 commitlint.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" commitlint.config.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 修改配置文件，增加 merge / ui 提交类型")]),t._v("\nmodule.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  extends: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  rules: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type-enum"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feat"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ui"')]),t._v(", \n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refactor"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"perf"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chore"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"revert"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 创建配置文件 husky.config.js")]),t._v("\nmodule.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二部分：完善 git commit 提交方式，避免手写约定格式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5. 用 cz-customizable 作为 commitizen 的适配器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D commitizen cz-customizable\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6. 修改 package.json 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-cz"')]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cz-customizable"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7. 创建 cz-customizable 的配置文件 .cz-config.js。完成自定义提交类型，并汉化提示信息")]),t._v("\nmodule.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  types: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),t._v(",      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat:      添加新功能'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),t._v(",       name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix:       修复 BUG'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),t._v(",     name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style:     修改了没有影响逻辑的代码, 如空格、缩进、逗号等'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ui'")]),t._v(",        name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ui:        修复了显示效果，如 css 修改等'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge'")]),t._v(",     name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge:     代码分支合并'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor'")]),t._v(",  name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor:  代码重构，没有增加新功能或者修复BUG'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf'")]),t._v(",      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf:      优化相关，如提升性能、体验等'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore'")]),t._v(",     name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore:     改变构建流程，或者增删依赖包、工具等'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs'")]),t._v(",      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs:      修改了文档'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v(",      name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test:      测试用例相关修改'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert'")]),t._v(",    name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert:    回滚到上一个版本'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  messages: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"选择要提交的更改类型:'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(",\n    scope: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'指示此更改涉及的范围(可选):"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v(",\n    customScope: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'指示此次更改涉及的文件，多个文件用“*”(可选):'")]),t._v(",\n    subject: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'以动词开头简短地描述变化(≤50):"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v(",\n    body: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提供更详细的变更描述，使用“|”换行(可选):"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v(",\n    breaking: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'列出任何破坏性的更改(可选):"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v(",\n    footer: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'列出这次更改关闭的问题 ISSUES CLOSED，如: #31, #34。(可选):"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v(",\n    confirmCommit: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'您确定要继续执行上面的提交吗?'")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  allowCustomScopes: true,\n  allowBreakingChanges: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  subjectLimit: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(",\n  skipQuestions: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'breaking'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三部分：自动生成 chnagelog")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 8. 生成 CHANGELOG")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D conventional-changelog-cli\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 9. 在package.json 的 script 中增加命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changelog"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第四部：vscode 安装 Git-commit-plugin For Vscode 插件包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 10. vscode 配置文件 setting.json 增加插件配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.MaxSubjectWords"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.ShowEmoji"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" false,\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GitCommitPlugin.CustomCommitType"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ui"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"detail"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修复了显示效果，如 css 修改等"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"detail"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"代码分支合"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0-beta.4/",target:"_blank",rel:"noopener noreferrer"}},[t._v("约定式提交规范（Conventional Commits）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://commitlint.js.org/#/",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint 官网"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/@commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional github"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular commit message guidelines"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog-cli github"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen github"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000009048911#item-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("git commit 规范指南"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);