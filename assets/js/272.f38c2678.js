(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{835:function(v,_,l){"use strict";l.r(_);var i=l(0),n=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"函数知识目录"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#函数知识目录","aria-hidden":"true"}},[v._v("#")]),v._v(" 函数知识目录")]),v._v(" "),l("p",[v._v("函数是一等公民：")]),v._v(" "),l("ol",[l("li",[v._v("高阶函数：可以像值一样用于赋值、入参、回参操作，因为函数即对象，对象能做的事情，函数也可以做。")]),v._v(" "),l("li",[v._v("函数声明提升：函数声明优先，值或对象声明忽略")])]),v._v(" "),l("ul",[l("li",[v._v("函数创建\n"),l("ul",[l("li",[v._v("函数声明\n"),l("ul",[l("li",[v._v("具名函数声明")]),v._v(" "),l("li",[v._v("匿名函数声明")])])]),v._v(" "),l("li",[v._v("函数表达式\n"),l("ul",[l("li",[v._v("匿名函数表达式")]),v._v(" "),l("li",[v._v("具名函数表达式")])])]),v._v(" "),l("li",[v._v("函数构造器创建 Function(arg1,arg2,..., funBody)")]),v._v(" "),l("li",[v._v("函数声明 VS 函数表达式")])])]),v._v(" "),l("li",[v._v("函数种类\n"),l("ul",[l("li",[v._v("普通函数")]),v._v(" "),l("li",[v._v("构造器函数 constructor")]),v._v(" "),l("li",[v._v("箭头函数 Arrow Function")]),v._v(" "),l("li",[v._v("生成器函数 Generator")])])]),v._v(" "),l("li",[v._v("函数调用\n"),l("ul",[l("li",[v._v("作为普通函数调用")]),v._v(" "),l("li",[v._v("作为构造器函数调用（使用new 创建对象）=> 如何限制函数只作为构造器函数：1. 严格模式；2. new.target")]),v._v(" "),l("li",[v._v("作为对象方法调用（obj.method）")]),v._v(" "),l("li",[v._v("作为泛型方法调用（借调方法，使用call/apply/bind调用）")]),v._v(" "),l("li",[v._v("作为右值表达式调用（自执行函数IIFE：括号（）、void、+ 、 - 、 ~）")])])]),v._v(" "),l("li",[v._v("函数参数\n"),l("ul",[l("li",[v._v("形参 parameter")]),v._v(" "),l("li",[v._v("实参 argument")]),v._v(" "),l("li",[v._v("剩余参数 rest")]),v._v(" "),l("li",[v._v("参数默认值")]),v._v(" "),l("li",[v._v("参数列表和具名参数")]),v._v(" "),l("li",[v._v("隐含参数 this arguments")])])]),v._v(" "),l("li",[v._v("函数作为对象\n"),l("ul",[l("li",[v._v("名称 name")]),v._v(" "),l("li",[v._v("属性 length")]),v._v(" "),l("li",[v._v("方法 bind call apply")])])]),v._v(" "),l("li",[v._v("函数运行时\n"),l("ul",[l("li",[v._v("函数运行的两个阶段：预编译阶段（标识符映射）和执行阶段")]),v._v(" "),l("li",[v._v("变量：理解声明变量的区别\n"),l("ul",[l("li",[v._v("可变性：const / let和var")]),v._v(" "),l("li",[v._v("词法作用域：var / let和const")])])]),v._v(" "),l("li",[v._v("函数声明提升")]),v._v(" "),l("li",[v._v("执行上下文\n"),l("ul",[l("li",[v._v("变量环境")]),v._v(" "),l("li",[v._v("词法环境")]),v._v(" "),l("li",[v._v("外部引用 scope （静态作用域）")]),v._v(" "),l("li",[v._v("this （动态作用域）")])])]),v._v(" "),l("li",[v._v("作用域")]),v._v(" "),l("li",[v._v("作用域链")]),v._v(" "),l("li",[v._v("闭包")])])]),v._v(" "),l("li",[v._v("高阶函数（函数作为一类对象，或者说一等公民的特性之一）\n"),l("ul",[l("li",[v._v("函数入参")]),v._v(" "),l("li",[v._v("返回函数")]),v._v(" "),l("li",[v._v("函数嵌套")]),v._v(" "),l("li",[v._v("函数回调")]),v._v(" "),l("li",[v._v("函数递归")]),v._v(" "),l("li",[v._v("函数柯里化")])])]),v._v(" "),l("li",[v._v("函数技巧\n"),l("ul",[l("li",[v._v("存储函数")]),v._v(" "),l("li",[v._v("自记忆函数")]),v._v(" "),l("li",[v._v("模拟私有变量")])])])])])}),[],!1,null,null,null);_.default=n.exports}}]);