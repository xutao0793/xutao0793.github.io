(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{224:function(t,a,s){t.exports=s.p+"assets/img/js_03.7e99876f.jpg"},620:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"《javascript-编程精粹》"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#《javascript-编程精粹》","aria-hidden":"true"}},[t._v("#")]),t._v(" 《JavaScript 编程精粹》")]),t._v(" "),n("p",[n("img",{attrs:{src:s(224),alt:"js_03.jpg"}}),t._v("\n2017年8月第1版")]),t._v(" "),n("p",[t._v("这本书的内容并不是非常深入，也不够全面，营养内容不多。书中第三章关于正则，第五章关于设计模式、第六关于测试与调试因为主题不一致，未阅读摘录。")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#p24页：js-自动插入分号机制-（automatic-semicolon-insertion-asi"}},[t._v("P24页：JS 自动插入分号机制 （automatic semicolon insertion, ASI)")])]),n("li",[n("a",{attrs:{href:"#p38页：作用域"}},[t._v("P38页：作用域")])]),n("li",[n("a",{attrs:{href:"#p44页：声明提升"}},[t._v("P44页：声明提升")])]),n("li",[n("a",{attrs:{href:"#p76页：典型继承中存在的问题"}},[t._v("P76页：典型继承中存在的问题")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"p24页：js-自动插入分号机制-（automatic-semicolon-insertion-asi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p24页：js-自动插入分号机制-（automatic-semicolon-insertion-asi","aria-hidden":"true"}},[t._v("#")]),t._v(" P24页：JS 自动插入分号机制 （automatic semicolon insertion, ASI)")]),t._v(" "),n("blockquote",[n("p",[t._v("关于 ASI 有过激烈的争论，在 JS 中语句结尾是否应该主动写分号，可自行搜索")])]),t._v(" "),n("p",[t._v("ASI 的理念是使得行尾的分号成为可选的，ASI 能够帮助解析器判断一个语句什么时候结束，插入分号结尾。")]),t._v(" "),n("p",[t._v("那插入分号的标准是什么呢？")]),t._v(" "),n("p",[t._v("ASI 规定一个语句在下列情况下视为结束，会插入分号：")]),t._v(" "),n("ul",[n("li",[t._v("行终结符，指换行号之后是一个非法的词法单元，则视为此行语句结束。")]),t._v(" "),n("li",[t._v("遇到右大括号 "),n("code",[t._v("}")])]),t._v(" "),n("li",[t._v("抵达文件的尾部")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 行终结符，指换行号之后是一个非法的词法单元，则视为此行语句结束")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出现在1后面的词法单元 console 是非法的，触发 ASI")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遇到右大括号 }")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ASI 作用后")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"p38页：作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p38页：作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" P38页：作用域")]),t._v(" "),n("ul",[n("li",[t._v("作用域定义了变量的可访问范围和变量的生命周期。")]),t._v(" "),n("li",[t._v("JS 是一门基于词法作用域的语言")])]),t._v(" "),n("h2",{attrs:{id:"p44页：声明提升"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p44页：声明提升","aria-hidden":"true"}},[t._v("#")]),t._v(" P44页：声明提升")]),t._v(" "),n("p",[t._v("关于JS声明提升需要理解以下几点：")]),t._v(" "),n("ul",[n("li",[t._v("不管是变量声明提升还是函数声明提升，都是在编译阶段发生的")]),t._v(" "),n("li",[t._v("当遇到变量和函数同名时，函数优先，提升后函数会覆盖同名的变量")]),t._v(" "),n("li",[t._v("变量声明提升只是提升声明部分，不包括赋值，提升后变量初始值是"),n("code",[t._v("undefined")]),t._v("，而函数声明提升是整体提升，包括函数体")]),t._v(" "),n("li",[t._v("let const 声明变量提升会形成暂时性死区，并且提升后初始值并不是"),n("code",[t._v("undefined")])])]),t._v(" "),n("blockquote",[n("p",[t._v("关于 var 提升与 let const 提升的区别，请点击查看"),n("a",{attrs:{href:""}})])]),t._v(" "),n("h2",{attrs:{id:"p76页：典型继承中存在的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#p76页：典型继承中存在的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" P76页：典型继承中存在的问题")]),t._v(" "),n("ul",[n("li",[t._v("继承导致了耦合。子类继承父类，使得子类与其父类紧紧耦合在一起")]),t._v(" "),n("li",[t._v("继承导致了冗余。当从父类继承时，子类没有权利选择，会全部继承。这就是“当你想一要根香蕉，却得到了拿着香蕉的大猩猩和整片森林”的问题。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);