(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{831:function(_,v,e){"use strict";e.r(v);var l=e(0),i=Object(l.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"regexp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp","aria-hidden":"true"}},[_._v("#")]),_._v(" RegExp")]),_._v(" "),e("p",[_._v("正则表达式是匹配模式，要么匹配字符，要么匹配位置。")]),_._v(" "),e("ul",[e("li",[_._v("匹配字符\n"),e("ul",[e("li",[_._v("横向模糊匹配\n"),e("ul",[e("li",[_._v("量词（重复）："),e("code",[_._v("{m,n} {m,} {m} ? + *")])]),_._v(" "),e("li",[_._v("贪婪匹配与惰性匹配"),e("code",[_._v("?")])])])]),_._v(" "),e("li",[_._v("纵向模糊匹配\n"),e("ul",[e("li",[_._v("字符组："),e("code",[_._v("[abc]")]),_._v(" "),e("ul",[e("li",[_._v("字符组的范围表示用"),e("code",[_._v("-")]),_._v(": "),e("code",[_._v("[1-9a-zA-Z_]")])]),_._v(" "),e("li",[_._v("字符组排队表示"),e("code",[_._v("^")]),_._v(": "),e("code",[_._v("[^1-9]")])]),_._v(" "),e("li",[_._v("字符组元字符表示："),e("code",[_._v("\\d \\D \\w \\W \\s \\S .")]),_._v(": digit word space")])])])])]),_._v(" "),e("li",[_._v("多模式分支： "),e("code",[_._v("|")])])])]),_._v(" "),e("li",[_._v("匹配位置\n"),e("ul",[e("li",[_._v("位置元字符表示："),e("code",[_._v("^ $ \\b \\B (?=p) (?!p)")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("^")]),_._v(": 开始位置")]),_._v(" "),e("li",[e("code",[_._v("$")]),_._v(": 结束位置")]),_._v(" "),e("li",[e("code",[_._v("\\b")]),_._v(": 单词边界，即"),e("code",[_._v("\\w")]),_._v("和"),e("code",[_._v("\\W")]),_._v("之间位置")]),_._v(" "),e("li",[e("code",[_._v("\\B")]),_._v(": 非单词边界")]),_._v(" "),e("li",[e("code",[_._v("(?=p)")]),_._v("： p匹配之前的位置")]),_._v(" "),e("li",[e("code",[_._v("(?!p)")]),_._v(": 不是P匹配之前的位置")])])])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);